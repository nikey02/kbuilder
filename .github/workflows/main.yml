# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
    # Repository name with owner. For example, actions/checkout
    # Default: ${{ github.repository }}
          repository: 'hnmn/bolt_kernel_xiaomi_oxygen'
      - name: deps
        run: |
          pwd
          ls -la
          sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl g++-multilib unzip libssl-dev libncurses5-dev wget -y
      - name: toolchain
        run: |
          git clone -b android-7.1.1_r60 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 toolchain
          ls toolchain
      
      - name: build
        run: | 
          rm -rf out 
          mkdir out 
          export ARCH=arm64 
          export SUBARCH=arm64 
          export CROSS_COMPILE=/home/runner/work/kbuilder/kbuilder/toolchain/bin/aarch64-linux-android-
          
          make O=out ARCH=arm64 btrfs_defconfig
          
          make -j$(nproc --all) O=out ARCH=arm64 | tee kernel.log
          
          tar cvzf final.tar.xz out/arch/arm64/boot
          
          ls -lah final.tar.xz
      
      - name: upload     
        uses: actions/upload-artifact@v2
        with:
         name: final
         path: final.tar.xz
      
          
          


         

           
      